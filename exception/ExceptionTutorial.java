
package exception;


public class ExceptionTutorial {
//All exception classes are subtypes of the java.lang.Exception class. 
//The exception class is a subclass of the Throwable class. Other than the exception class there is another subclass
//called Error which is derived from the Throwable class.

//Errors are abnormal conditions that happen in case of severe failures, these are not handled by the Java programs. 
//Errors are generated to indicate errors generated by the runtime environment. Example: JVM is out of memory. 
//Normally, programs cannot recover from errors.
    
    
//public String getMessage() Returns a detailed message about the exception that has occurred. This message is initialized in the Throwable constructor.

//public Throwable getCause() Returns the cause of the exception as represented by a Throwable object.
	

//public String toString() Returns the name of the class concatenated with the result of getMessage().
	

//public void printStackTrace() Prints the result of toString() along with the stack trace to System.err, the error output stream.
	

//public StackTraceElement [] getStackTrace() Returns an array containing each element on the stack trace. The element at index 0 represents the top of the call stack, and the last element in the array represents the method at the bottom of the call stack.
	

//public Throwable fillInStackTrace() Fills the stack trace of this Throwable object with the current stack trace, adding to any previous information in the stack trace.
    
    
    public static void main(String[] args) {
        try {
         int a[] = new int[2];
         System.out.println("Access element three :" + a[3]);
      } catch (ArrayIndexOutOfBoundsException e) {
         System.out.println("Exception thrown  :" + e);
      }
      System.out.println("Out of the block");
    }
    
}
